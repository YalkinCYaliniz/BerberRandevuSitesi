<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Şube Listesi</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/kullanicilar.css" rel="stylesheet">
    <link href="/css/styles.css" rel="stylesheet">
    <link href="/css/partial.css" rel="stylesheet">
    
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4">Şube Listesi</h1>
        <div class="mb-3">
            <!-- Ekle Butonu -->
            <a href="/Subeler/Ekle" class="btn btn-primary">Yeni Şube Ekle</a>
        </div>
        <table class="table table-sm table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Şube Adı</th>
                    <th>Çalışanlar</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody id="subeTableBody">
                <tr>
                    <td colspan="4">Yükleniyor...</td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
        // Şubeleri API'den çek ve tabloya yaz
        async function fetchSubeler() {
            try {
                const response = await fetch('/api/Subeler');
                if (!response.ok) throw new Error('Veriler alınamadı.');

                const subeler = await response.json();
                const tableBody = document.getElementById('subeTableBody');
                tableBody.innerHTML = ''; // Mevcut içeriği temizle

                // Şubeleri tabloya ekle
                subeler.forEach((sube, index) => {
                    // Çalışanları liste olarak yazdır
                    const calisanlar = sube.calisanlar.length > 0
                        ? `<ul>${sube.calisanlar.map(c => `<li>${c.adi} ${c.soyadi}</li>`).join('')}</ul>`
                        : 'Çalışan yok';

                    const row = `
                        <tr>
                            <td>${index + 1}</td>
                            <td>${sube.subeAdi}</td>
                            <td>${calisanlar}</td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="editSube(${sube.id})">Güncelle</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteSube(${sube.id})">Sil</button>
                            </td>
                        </tr>
                    `;
                    tableBody.innerHTML += row;
                });
            } catch (error) {
                console.error(error);
                const tableBody = document.getElementById('subeTableBody');
                tableBody.innerHTML = `
                    <tr>
                        <td colspan="4">Veriler alınırken bir hata oluştu.</td>
                    </tr>
                `;
            }
        }

        // Şubeyi sil
        async function deleteSube(id) {
            if (!confirm('Bu şubeyi silmek istediğinize emin misiniz?')) return;

            try {
                const response = await fetch(`/api/Subeler/${id}`, { method: 'DELETE' });
                if (response.ok) {
                    alert('Şube başarıyla silindi.');
                    fetchSubeler();
                } else {
                    alert('Şube silinirken bir hata oluştu.');
                }
            } catch (error) {
                console.error(error);
                alert('Şube silinirken bir hata oluştu.');
            }
        }

        // Şube güncelleme modalını aç
        function editSube(id) {
            const newSubeAdi = prompt('Yeni şube adını girin:');
            if (!newSubeAdi) return;

            updateSube(id, newSubeAdi);
        }

        // Şubeyi güncelle
        async function updateSube(id, newSubeAdi) {
            try {
                const response = await fetch(`/api/Subeler/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id, subeAdi: newSubeAdi })
                });

                if (response.ok) {
                    alert('Şube başarıyla güncellendi.');
                    fetchSubeler();
                } else {
                    alert('Şube güncellenirken bir hata oluştu.');
                }
            } catch (error) {
                console.error(error);
                alert('Şube güncellenirken bir hata oluştu.');
            }
        }

        // Sayfa yüklendiğinde şubeleri çek
        document.addEventListener('DOMContentLoaded', fetchSubeler);
    </script>
</body>
</html>
